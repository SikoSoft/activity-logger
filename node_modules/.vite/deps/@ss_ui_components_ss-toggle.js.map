{
  "version": 3,
  "sources": ["../../@ss/ui/src/components/ss-toggle/ss-toggle.events.ts", "../../@ss/ui/src/components/ss-toggle/ss-toggle.models.ts", "../../@ss/ui/src/components/ss-toggle/ss-toggle.ts"],
  "sourcesContent": ["export const toggleChangedEventName = 'toggle-changed';\n\nexport interface ToggleChangedEventPayload {\n  on: boolean;\n}\n\nexport class ToggleChangedEvent extends CustomEvent<ToggleChangedEventPayload> {\n  constructor(payload: ToggleChangedEventPayload) {\n    super(toggleChangedEventName, {\n      bubbles: true,\n      composed: true,\n      detail: payload,\n    });\n  }\n}\n", "import { PropConfigMap, PropTypes } from '../../models/Prop';\n\nexport enum SSToggleProp {\n  ON = 'on',\n  HIGHLIGHT_TIME = 'highlightTime',\n}\n\nexport interface SSToggleProps extends PropTypes {\n  [SSToggleProp.ON]: boolean;\n  [SSToggleProp.HIGHLIGHT_TIME]: number;\n}\n\nexport const ssToggleProps: PropConfigMap<SSToggleProps> = {\n  [SSToggleProp.ON]: {\n    default: false,\n    description: 'Whether the toggle is in enabled state',\n    control: 'boolean',\n  },\n  [SSToggleProp.HIGHLIGHT_TIME]: {\n    default: 350,\n    description: 'Time in milliseconds to highlight the toggle when clicked',\n    control: 'number',\n  },\n};\n", "import { css, html, LitElement } from 'lit';\nimport { customElement, property, state } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\n\nimport { ToggleChangedEvent } from './ss-toggle.events';\nimport { SSToggleProp, ssToggleProps, SSToggleProps } from './ss-toggle.models';\n\n@customElement('ss-toggle')\nexport class SSToggle extends LitElement {\n  static styles = css`\n    .toggle {\n      display: inline-block;\n      height: 3rem;\n      width: 6rem;\n      border-radius: 1.5rem;\n      background: linear-gradient(#777, #999);\n      position: relative;\n      transition: all 0.1s;\n      cursor: pointer;\n\n      &:hover {\n        scale: 1.05;\n      }\n\n      &.highlight {\n        animation: highlight var(--highlight-time) ease-in-out;\n      }\n    }\n\n    .toggle::before {\n      content: '';\n      position: absolute;\n      height: 2.4rem;\n      width: 5.4rem;\n      top: 0.3rem;\n      left: 0.3rem;\n\n      background: linear-gradient(#ccc, #aaa);\n      border-radius: 1.2rem;\n    }\n\n    .toggle.on {\n      .ball {\n        opacity: 1;\n      }\n    }\n\n    .toggle.on .ball {\n      left: 3.5rem;\n    }\n\n    .ball {\n      opacity: 0.35;\n      position: absolute;\n      display: inline-block;\n      height: 2rem;\n      width: 2rem;\n      left: 0.5rem;\n      top: 0.5rem;\n      background: linear-gradient(45deg, #555, #777);\n      border-radius: 1rem;\n      border: 2px #222 solid;\n      box-sizing: border-box;\n      transition: all 0.3s;\n    }\n\n    @keyframes highlight {\n      0% {\n        box-shadow: 0 0 0px rgba(0, 0, 0, 0);\n      }\n      50% {\n        box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\n      }\n      100% {\n        box-shadow: 0 0 0px rgba(0, 0, 0, 0);\n      }\n    }\n  `;\n\n  @property({ type: Boolean, reflect: true })\n  [SSToggleProp.ON]: SSToggleProps[SSToggleProp.ON] =\n    ssToggleProps[SSToggleProp.ON].default;\n\n  @property({ type: Number, reflect: true })\n  [SSToggleProp.HIGHLIGHT_TIME]: SSToggleProps[SSToggleProp.HIGHLIGHT_TIME] =\n    ssToggleProps[SSToggleProp.HIGHLIGHT_TIME].default;\n\n  @state()\n  highlight = false;\n\n  @state()\n  get classes() {\n    return { toggle: true, on: this.on, highlight: this.highlight };\n  }\n\n  private handleClick() {\n    this.highlight = true;\n    const on = !this.on;\n    this.on = on;\n    this.dispatchEvent(new ToggleChangedEvent({ on }));\n    setTimeout(() => {\n      this.highlight = false;\n    }, this.highlightTime);\n  }\n\n  render() {\n    return html`\n      <span\n        part=\"container\"\n        class=${classMap(this.classes)}\n        @click=${this.handleClick}\n        style=\"--highlight-time: ${this.highlightTime}ms\"\n      >\n        <span part=\"indicator\" class=\"ball\"></span>\n      </span>\n    `;\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAO,IAAM,yBAAyB;AAMhC,IAAO,qBAAP,cAAkC,YAAsC;EAC5E,YAAY,SAAkC;AAC5C,UAAM,wBAAwB;MAC5B,SAAS;MACT,UAAU;MACV,QAAQ;KACT;EACH;;;;ACXF,IAAY;CAAZ,SAAYA,eAAY;AACtB,EAAAA,cAAA,IAAA,IAAA;AACA,EAAAA,cAAA,gBAAA,IAAA;AACF,GAHY,iBAAA,eAAY,CAAA,EAAA;AAUjB,IAAM,gBAA8C;EACzD,CAAC,aAAa,EAAE,GAAG;IACjB,SAAS;IACT,aAAa;IACb,SAAS;;EAEX,CAAC,aAAa,cAAc,GAAG;IAC7B,SAAS;IACT,aAAa;IACb,SAAS;;;;;;;;;;;;;;ACbN,IAAM,YAANC,MAAA,cAAuB,WAAU;EAAjC,cAAA;;AAwEL,SAAA,EAAA,IACE,cAAc,aAAa,EAAE,EAAE;AAGjC,SAAA,EAAA,IACE,cAAc,aAAa,cAAc,EAAE;AAG7C,SAAA,YAAY;EA6Bd;EA1BE,IAAI,UAAO;AACT,WAAO,EAAE,QAAQ,MAAM,IAAI,KAAK,IAAI,WAAW,KAAK,UAAS;EAC/D;EAEQ,cAAW;AACjB,SAAK,YAAY;AACjB,UAAM,KAAK,CAAC,KAAK;AACjB,SAAK,KAAK;AACV,SAAK,cAAc,IAAI,mBAAmB,EAAE,GAAE,CAAE,CAAC;AACjD,eAAW,MAAK;AACd,WAAK,YAAY;IACnB,GAAG,KAAK,aAAa;EACvB;EAEA,SAAM;AACJ,WAAO;;;gBAGK,SAAS,KAAK,OAAO,CAAC;iBACrB,KAAK,WAAW;mCACE,KAAK,aAAa;;;;;EAKnD;QApCC,aAAa,IAAE,KAIf,aAAa,gBA3EPA,IAAA,SAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KADXA;AAwEL,WAAA;EADC,SAAS,EAAE,MAAM,SAAS,SAAS,KAAI,CAAE;;AAK1C,WAAA;EADC,SAAS,EAAE,MAAM,QAAQ,SAAS,KAAI,CAAE;;AAKzC,WAAA;EADC,MAAK;;AAIN,WAAA;EADC,MAAK;;AAlFK,WAAQ,WAAA;EADpB,cAAc,WAAW;GACb,QAAQ;",
  "names": ["SSToggleProp", "_a"]
}
