{
  "version": 3,
  "sources": ["../../@ss/ui/src/components/notification-provider/notification-message/notification-message.models.ts", "../../@ss/ui/src/components/notification-provider/notification-message/notification-message.events.ts", "../../@ss/ui/src/components/notification-provider/notification-message/notification-message.ts", "../../@ss/ui/src/components/notification-provider/notification-provider.ts"],
  "sourcesContent": ["import { PropConfigMap, PropTypes } from '@/models/Prop';\nimport { NotificationType } from '../notification-provider.models';\n\nexport enum NotificationMessageProp {\n  NOTIFICATION_ID = 'notificationId',\n  MESSAGE = 'message',\n  TYPE = 'type',\n  START_TIME = 'startTime',\n  MESSAGE_LIFE = 'messageLife',\n}\n\nexport interface NotificationMessageProps extends PropTypes {\n  [NotificationMessageProp.NOTIFICATION_ID]: number;\n  [NotificationMessageProp.MESSAGE]: string;\n  [NotificationMessageProp.TYPE]: NotificationType;\n  [NotificationMessageProp.START_TIME]: number;\n  [NotificationMessageProp.MESSAGE_LIFE]: number;\n}\n\nexport const notificationMessageProps: PropConfigMap<NotificationMessageProps> =\n  {\n    [NotificationMessageProp.NOTIFICATION_ID]: {\n      default: 0,\n      control: 'number',\n      description: 'The id of the notification',\n    },\n    [NotificationMessageProp.MESSAGE]: {\n      default: '',\n      control: 'text',\n      description: 'The message to display',\n    },\n    [NotificationMessageProp.TYPE]: {\n      default: NotificationType.INFO,\n      control: 'text',\n      description: 'The type of message to display',\n    },\n    [NotificationMessageProp.START_TIME]: {\n      default: new Date().getTime(),\n      control: 'number',\n      description: 'The time the message was created',\n    },\n    [NotificationMessageProp.MESSAGE_LIFE]: {\n      default: 5000,\n      control: 'number',\n      description: 'The time in milliseconds that a message will be displayed',\n    },\n  };\n", "export const notificationClickedEventName = 'notification-clicked';\n\nexport interface NotificationClickedEventPayload {\n  id: number;\n}\n\nexport class NotificationClickedEvent extends CustomEvent<NotificationClickedEventPayload> {\n  constructor(payload: NotificationClickedEventPayload) {\n    super(notificationClickedEventName, {\n      bubbles: true,\n      composed: true,\n      detail: payload,\n    });\n  }\n}\n", "import { LitElement, html, css } from 'lit';\nimport { property, customElement, state } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\n\nimport { theme } from '../../../styles/theme';\nimport {\n  NotificationMessageProp,\n  NotificationMessageProps,\n  notificationMessageProps,\n} from './notification-message.models';\nimport { NotificationClickedEvent } from './notification-message.events';\n\n@customElement('notification-message')\nexport class NotificationMessage extends LitElement {\n  static styles = [\n    theme,\n    css`\n      .notification-message {\n        position: relative;\n        background-color: var(--color, #ddd);\n        color: #333;\n        text-align: center;\n        padding: 0.25rem;\n        animation: fade-out var(--message-life, 1000ms) linear forwards;\n        margin: 0.5rem 0;\n        border-radius: 0.25rem;\n        box-shadow: 0 0 1rem rgba(0, 0, 0, 0.25);\n\n        &.success {\n          background-color: var(--color-success, #4caf50);\n          color: #fff;\n        }\n\n        &.error {\n          background-color: var(--color-error, #f44336);\n          color: #fff;\n        }\n\n        &.info {\n          background-color: var(--color-info, #2196f3);\n          color: #fff;\n        }\n\n        .time-indicator {\n          position: absolute;\n          top: 0;\n          left: 0;\n          height: 100%;\n          z-index: 1;\n          background: linear-gradient(\n            90deg,\n            rgba(255, 255, 255, 0.125),\n            rgba(255, 255, 255, 0.25)\n          );\n          animation: time-elapsed var(--message-life, 1000ms) linear forwards;\n        }\n\n        .content {\n          position: relative;\n          height: 100%;\n          width: 100%;\n          z-index: 2;\n        }\n      }\n\n      @keyframes time-elapsed {\n        0% {\n          width: 0%;\n        }\n        100% {\n          width: 100%;\n        }\n      }\n\n      @keyframes fade-out {\n        0% {\n          opacity: 1;\n        }\n        75% {\n          opacity: 1;\n        }\n        100% {\n          opacity: 0;\n        }\n      }\n    `,\n  ];\n\n  @property({ type: Number })\n  [NotificationMessageProp.NOTIFICATION_ID]: NotificationMessageProps[NotificationMessageProp.NOTIFICATION_ID] =\n    notificationMessageProps[NotificationMessageProp.NOTIFICATION_ID].default;\n\n  @property()\n  [NotificationMessageProp.MESSAGE]: NotificationMessageProps[NotificationMessageProp.MESSAGE] =\n    notificationMessageProps[NotificationMessageProp.MESSAGE].default;\n\n  @property()\n  [NotificationMessageProp.TYPE]: NotificationMessageProps[NotificationMessageProp.TYPE] =\n    notificationMessageProps[NotificationMessageProp.TYPE].default;\n\n  @property({ type: Number })\n  [NotificationMessageProp.START_TIME]: NotificationMessageProps[NotificationMessageProp.START_TIME] =\n    notificationMessageProps[NotificationMessageProp.START_TIME].default;\n\n  @property({ type: Number, reflect: true })\n  [NotificationMessageProp.MESSAGE_LIFE]: NotificationMessageProps[NotificationMessageProp.MESSAGE_LIFE] =\n    notificationMessageProps[NotificationMessageProp.MESSAGE_LIFE].default;\n\n  get classes(): Record<string, boolean> {\n    return {\n      'notification-message': true,\n      [this[NotificationMessageProp.TYPE]]: true,\n    };\n  }\n\n  render() {\n    return html`\n      <div\n        @click=${() =>\n          this.dispatchEvent(\n            new NotificationClickedEvent({ id: this.notificationId }),\n          )}\n        class=${classMap(this.classes)}\n        style=${`--message-life: ${this[NotificationMessageProp.MESSAGE_LIFE]}ms`}\n      >\n        <div class=\"time-indicator\"></div>\n        <div class=\"content\">\n          ${this[NotificationMessageProp.MESSAGE]}\n          <slot></slot>\n        </div>\n      </div>\n    `;\n  }\n}\n", "import { LitElement, html, css } from 'lit';\nimport { property, customElement, state } from 'lit/decorators.js';\nimport { repeat } from 'lit/directives/repeat.js';\nimport { classMap } from 'lit/directives/class-map.js';\n\nimport { theme } from '../../styles/theme';\nimport {\n  NotificationProviderProp,\n  NotificationProviderProps,\n  Notification,\n  notificationProviderProps,\n  NotificationType,\n  NotificationSide,\n} from './notification-provider.models';\n\nimport './notification-message/notification-message';\n\n@customElement('notification-provider')\nexport class NotificationProvider extends LitElement {\n  notificationId = 0;\n\n  @state()\n  notifications: Notification[] = [];\n\n  public static styles = [\n    theme,\n    css`\n      .notification-provider {\n        position: fixed;\n        left: 10vw;\n        width: 80vw;\n        z-index: 1000;\n\n        &.top {\n          top: 0;\n        }\n\n        &.bottom {\n          bottom: 0;\n        }\n      }\n    `,\n  ];\n\n  @property({ type: Number, reflect: true })\n  [NotificationProviderProp.MESSAGE_LIFE]: NotificationProviderProps[NotificationProviderProp.MESSAGE_LIFE] =\n    notificationProviderProps[NotificationProviderProp.MESSAGE_LIFE].default;\n\n  @property({ type: Boolean })\n  [NotificationProviderProp.TOP]: NotificationProviderProps[NotificationProviderProp.TOP] =\n    notificationProviderProps[NotificationProviderProp.TOP].default;\n\n  @property({ type: Boolean })\n  [NotificationProviderProp.BOTTOM]: NotificationProviderProps[NotificationProviderProp.BOTTOM] =\n    notificationProviderProps[NotificationProviderProp.BOTTOM].default;\n\n  @state()\n  get classes(): Record<string, boolean> {\n    return {\n      'notification-provider': true,\n      top: this.side === NotificationSide.TOP,\n      bottom: this.side === NotificationSide.BOTTOM,\n    };\n  }\n\n  @state()\n  get side(): NotificationSide {\n    if (this[NotificationProviderProp.TOP]) {\n      return NotificationSide.TOP;\n    }\n\n    return NotificationSide.BOTTOM;\n  }\n\n  addNotification(message: string, type: NotificationType): number {\n    const id = this.notificationId++;\n    const notification: Notification = {\n      id,\n      message,\n      type,\n      startTime: new Date(),\n      messageLife: this[NotificationProviderProp.MESSAGE_LIFE],\n    };\n\n    this.notifications = [...this.notifications, notification];\n\n    setTimeout(() => {\n      this.removeNotification(id);\n    }, this[NotificationProviderProp.MESSAGE_LIFE]);\n\n    return id;\n  }\n\n  removeNotification(id: number): void {\n    this.notifications = this.notifications.filter(n => n.id !== id);\n  }\n\n  render() {\n    return html`\n      <div class=${classMap(this.classes)}>\n        ${repeat(\n          this.notifications,\n          n => n.id,\n          n => {\n            return html` <notification-message\n              @notification-clicked=${() => this.removeNotification(n.id)}\n              message=${n.message}\n              type=${n.type}\n              startTime=${n.startTime.getTime()}\n              messageLife=${n.messageLife}\n            ></notification-message>`;\n          },\n        )}\n      </div>\n    `;\n  }\n}\n"],
  "mappings": "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",
  "names": ["NotificationMessageProp", "_a", "_a", "_b", "_c", "__decorate"]
}
