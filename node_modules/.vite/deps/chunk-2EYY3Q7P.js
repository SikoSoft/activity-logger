import {
  classMap
} from "./chunk-NRWESX2P.js";
import {
  customElement,
  property,
  state
} from "./chunk-UZUV3VNE.js";
import {
  LitElement
} from "./chunk-M5Y2UPGE.js";
import {
  css
} from "./chunk-SBXOPBOA.js";
import {
  html
} from "./chunk-32RPEPIA.js";

// node_modules/@ss/ui/dist/components/ss-loader/ss-loader.models.js
var SSLoaderProp;
(function(SSLoaderProp2) {
  SSLoaderProp2["PADDED"] = "padded";
})(SSLoaderProp || (SSLoaderProp = {}));
var ssLoaderProps = {
  [SSLoaderProp.PADDED]: {
    default: false,
    description: "Whether to provide padding around the loader",
    control: "boolean"
  }
};

// node_modules/@ss/ui/dist/components/ss-loader/ss-loader.js
var __decorate = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var _a;
var _a2;
var SSLoader = (_a2 = class extends LitElement {
  constructor() {
    super(...arguments);
    this[_a] = ssLoaderProps[SSLoaderProp.PADDED].default;
  }
  get classes() {
    return { container: true, padded: this.padded };
  }
  render() {
    return html`<div class=${classMap(this.classes)}>
      <span class="loader"></span>
    </div>`;
  }
}, _a = SSLoaderProp.PADDED, _a2.styles = css`
    .container {
      text-align: center;
      height: 16px;
    }

    .container.padded {
      margin: 1rem;
    }

    .loader {
      display: inline-block;
      width: 16px;
      height: 16px;
      border-radius: 50%;
      background-color: #000;
      box-shadow:
        32px 0 #000,
        -32px 0 #000;
      position: relative;
      animation: flash 0.5s ease-out infinite alternate;
      transform: skewX(50%);
    }

    @keyframes flash {
      0% {
        background-color: #0002;
        box-shadow:
          32px 0 #0002,
          -32px 0 #000;
      }
      50% {
        background-color: #000;
        box-shadow:
          32px 0 #0002,
          -32px 0 #0002;
      }
      100% {
        background-color: #0002;
        box-shadow:
          32px 0 #000,
          -32px 0 #0002;
      }
    }
  `, _a2);
__decorate([
  property({ type: Boolean })
], SSLoader.prototype, _a, void 0);
__decorate([
  state()
], SSLoader.prototype, "classes", null);
SSLoader = __decorate([
  customElement("ss-loader")
], SSLoader);

export {
  SSLoader
};
//# sourceMappingURL=chunk-2EYY3Q7P.js.map
